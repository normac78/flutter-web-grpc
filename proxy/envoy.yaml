admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: dev_listener
    address:
      socket_address: { address: 0.0.0.0, port_value: 8081 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: docker_local
                  auto_host_rewrite: true
                  max_stream_duration:
                    grpc_timeout_header_max: 0s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.filters.http.grpc_web
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  # - name: prod_listener
  #   address:
  #     socket_address: { address: 0.0.0.0, port_value: 8080 }
  #   filter_chains:
  #   - filters:
  #     - name: envoy.filters.network.http_connection_manager
  #       typed_config:
  #         "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
  #         codec_type: auto
  #         stat_prefix: ingress_http
  #         route_config:
  #           name: local_route
  #           virtual_hosts:
  #           - name: local_service
  #             domains: ["*"]
  #             routes:
  #             - match: { prefix: "/" }
  #               route:
  #                 cluster: envoy_grpc_proxy
  #                 auto_host_rewrite: true
  #                 max_stream_duration:
  #                   grpc_timeout_header_max: 0s
  #             cors:
  #               allow_origin_string_match:
  #               - prefix: "*"
  #               allow_methods: GET, PUT, DELETE, POST, OPTIONS
  #               allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
  #               max_age: "1728000"
  #               expose_headers: custom-header-1,grpc-status,grpc-message
  #         http_filters:
  #         - name: envoy.filters.http.grpc_web
  #         - name: envoy.filters.http.cors
  #         - name: envoy.filters.http.router
  #           typed_config:
  #             "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: docker_local
    connect_timeout: 20s
    dns_refresh_rate: 90s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: docker_local
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: host.docker.internal
                    port_value: 50051
  # - name: envoy_grpc_proxy
  #   type: strict_dns
  #   connect_timeout: 20s
  #   http2_protocol_options: {}
  #   lb_policy: round_robin
  #   dns_refresh_rate: 90s
  #   load_assignment:
  #     cluster_name: envoy_grpc_proxy
  #     endpoints:
  #       - lb_endpoints:
  #           - endpoint:
  #               address:
  #                 socket_address:
  #                   address: <CLOUD_RUN_ENDPOINT_ADDRESS>
  #                   port_value: 443
  #   dns_lookup_family: V4_ONLY
  #   transport_socket:
  #     name: envoy.transport_sockets.tls
  #     typed_config:
  #       "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
  #       common_tls_context:
  #         alpn_protocols: h2
  #         validation_context:
  #           trusted_ca:
  #             filename: /etc/ssl/certs/ca-certificates.crt
  #       sni: <CLOUD_RUN_ENDPOINT_ADDRESS>